<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_fix">
    <sys_script_fix action="INSERT_OR_UPDATE">
        <active>false</active>
        <before>false</before>
        <description/>
        <flush_cache>false</flush_cache>
        <name>RTSM: HN test 2</name>
        <record_for_rollback>false</record_for_rollback>
        <run_once>true</run_once>
        <script><![CDATA[var sp_queue_sys_id = '076e0962dbe9b450689c22d4059619a3';
processSPqueue(sp_queue_sys_id);

//deleteSP("74935f2ddbd5b010689c22d405961944");

//startProcessingQueue();
//launchRTSMTest();

var ops = RTSMConst.QO;
////opType: "createAlert": 10, "updateAlert": 20, "resolveAlert": 30, "recalcCI": 60

//startAlwaysCal('ab52cf9d1b7ee49051d64261cd4bcb8e', ops.createAlert, 'fc874b151bbee49051d64261cd4bcbef', false);

//x_atpu_rtsm.CMDBCIRelation
//addCIRelation
//_insertCiRelationEntry
//x_atpu_rtsm_rtsm_cmdb_rel_ci

function deleteSP(sys_id) {
	var now_GR = new GlideRecord('x_atpu_rtsm_ci_tree_state_persistency');
	if (now_GR.get(sys_id))
		now_GR.deleteRecord();
}

function processSPqueue(sys_id) {
	if (!sys_id)
		return;
	
	var spQueueEntry = getProcessingQueue(sys_id);
	processQueue(spQueueEntry);
}

function launchRTSMTest() {
	//var spQueueEntry = generateSPQueueEntry();
	
	var cmdb_ci = 'a88acbb7db5123487ba16d15ca9619b6'; //Car report CZ
	var severity = '1'; //0-5 : clear, critical, major, minor, warning, ok
	var state = 'Open'; //Open, Reopen, Flapping, Closed
	
	//var alert = generateAlert(cmdb_ci, severity, state);
	
	var spQueueEntry = getProcessingQueue('375a8e131b36a01051d64261cd4bcb36');
	processQueue(spQueueEntry);
	
}

function getProcessingQueue(sys_id) {
	var gr_queue = new GlideRecord('x_atpu_rtsm_citreesp_queue');
	gr_queue.get(sys_id);
	return gr_queue;
}

function generateAlert(cmdb_ci, severity, state) {
	var gr_em_alert = new GlideRecord('em_alert');
	gr_em_alert.initialize();
	
	gr_em_alert.setValue('cmdb_ci', cmdb_ci);
	gr_em_alert.setValue('severity', severity);
	gr_em_alert.setValue('state', state);
	
	gr_em_alert.insert();
	
	return gr_em_alert;
}

function processQueue(spQueueEntry) {
	spQueueEntry.state = RTSMConst.QueueState.PROCESSING; // processing
	spQueueEntry.update();
	
	var ciTree = new CITreeSP();
	ciTree.processQueueEntry(spQueueEntry);
}

function startProcessingQueue() {
	RTSMJobs.sj_CITreeSPQueue();
}


//var test_hng = new SPImpactingAlertsAlways('', '', '', '', '', '');


function startAlwaysCal(ci_rel_sys_id, op_type, alert_sys_id, isCluster) {
	var gr_ci_rel = new GlideRecord('x_atpu_rtsm_rtsm_cmdb_rel_ci');
	gr_ci_rel.get(ci_rel_sys_id);

	var gr_alert = new GlideRecord('em_alert');
	gr_alert.get(alert_sys_id);

	var ops = RTSMConst.QO;
	////opType: "createAlert": 10, "updateAlert": 20, "resolveAlert": 30, "recalcCI": 60

	var csCalculator = new CSAlwaysCalculator();
	csCalculator.calc(gr_ci_rel, ops.createAlert, gr_alert, gr_alert.cmdb_ci, false); //ciRelParCi, opType, evtObj, ciObj, clusCalFlag
}]]></script>
        <sys_class_name>sys_script_fix</sys_class_name>
        <sys_created_by>hoa.nguyen</sys_created_by>
        <sys_created_on>2021-04-21 09:22:05</sys_created_on>
        <sys_id>7517341bdb63e450689c22d4059619ef</sys_id>
        <sys_mod_count>74</sys_mod_count>
        <sys_name>RTSM: HN test 2</sys_name>
        <sys_package display_value="RTSM" source="x_atpu_rtsm">35d6a18cdb631010689c22d40596190f</sys_package>
        <sys_policy/>
        <sys_scope display_value="RTSM">35d6a18cdb631010689c22d40596190f</sys_scope>
        <sys_update_name>sys_script_fix_7517341bdb63e450689c22d4059619ef</sys_update_name>
        <sys_updated_by>andreas.reermann@atos.net</sys_updated_by>
        <sys_updated_on>2021-08-04 14:53:30</sys_updated_on>
        <unloadable>false</unloadable>
    </sys_script_fix>
</record_update>
